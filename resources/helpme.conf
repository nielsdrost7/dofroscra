server {
    listen 80;
    server_name helpme.local;
    root /var/www/projects/helpme;
    index index.php;

    server_tokens off;
    add_header Access-Control-Allow-Origin $http_origin;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=none";

        # Set the X-Content-Type-Options header for images, JS, and CSS
        location ~ \.(gif|ico|jpe?g|png|svg|js|css)$ {
            add_header X-Content-Type-Options nosniff;
        }
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header X-Content-Type-Options nosniff;
        #add_header Access-Control-Allow-Origin *;
    }

    location ~ /\.ht {
        deny all;
    }

    # Special handler for config.php
    location = /ipconfig.php {
        internal;
        error_page 500 = /special_500_handler;
    }

    # Special handler for the 500 Internal Server Error status
    location = /special_500_handler {
        internal;
        access_log /var/log/nginx/helpme_hacker.log;
        return 500;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/helpme_error.log;
    access_log /var/log/nginx/helpme_access.log;
}
